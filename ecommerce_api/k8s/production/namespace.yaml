apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-config
  namespace: production
  labels:
    app: ecommerce-api
data:
  redis-host: "your-redis-cluster.cache.amazonaws.com"
  redis-port: "6379"
  graphite-host: "graphite.monitoring.svc.cluster.local"
  graphite-port: "2003"
  java-opts: "-Xmx768m -Xms512m"
  logging-level: "INFO"

---
apiVersion: v1
kind: Secret
metadata:
  name: ecommerce-secrets
  namespace: production
  labels:
    app: ecommerce-api
type: Opaque
data:
  # These values should be base64 encoded
  # Example: echo -n "your-value" | base64
  db-url: amRiYzpteXNxbDovL3lvdXItcmRzLWVuZHBvaW50OjMzMDYvZWNvbW1lcmNlX3Byb2Q=
  db-username: ZWNvbW1lcmNlX3VzZXI=
  db-password: eW91ci1kYi1wYXNzd29yZA==
  jwt-secret: bXlTZWNyZXRLZXkxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTA=
  redis-auth-token: eW91ci1yZWRpcy1hdXRoLXRva2Vu

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecommerce-api-sa
  namespace: production
  labels:
    app: ecommerce-api
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/ecommerce-api-service-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ecommerce-api-role
  namespace: production
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ecommerce-api-rolebinding
  namespace: production
subjects:
- kind: ServiceAccount
  name: ecommerce-api-sa
  namespace: production
roleRef:
  kind: Role
  name: ecommerce-api-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ecommerce-api-netpol
  namespace: production
  labels:
    app: ecommerce-api
spec:
  podSelector:
    matchLabels:
      app: ecommerce-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 3306  # MySQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 80    # HTTP
